{"ast":null,"code":"var _jsxFileName = \"/Users/dayanajoseph/Desktop/webapp/pet-rescue/UI/src/pages/Pets.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Typography, Grid, Container } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pets = () => {\n  _s();\n  const [pets, setPets] = useState([]);\n  useEffect(() => {\n    // Placeholder for fetching pets data\n    axios.get('/api/pets').then(response => setPets(response.data)).catch(error => console.error('Error fetching pets:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Reported Pets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: pets.map((pet, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"h2\",\n              children: pet.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              children: [\"Location: \", pet.location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Pets, \"7RBAgWZCtqlXVpMU/6w9/5IUzu8=\");\n_c = Pets;\nexport default Pets;\nvar _c;\n$RefreshReg$(_c, \"Pets\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Typography","Grid","Container","axios","jsxDEV","_jsxDEV","Pets","_s","pets","setPets","get","then","response","data","catch","error","console","maxWidth","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","pet","index","item","xs","sm","md","component","status","color","location","_c","$RefreshReg$"],"sources":["/Users/dayanajoseph/Desktop/webapp/pet-rescue/UI/src/pages/Pets.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Typography, Grid, Container } from '@mui/material';\nimport axios from 'axios';\n\nconst Pets = () => {\n  const [pets, setPets] = useState([]);\n\n  useEffect(() => {\n    // Placeholder for fetching pets data\n    axios.get('/api/pets')\n      .then(response => setPets(response.data))\n      .catch(error => console.error('Error fetching pets:', error));\n  }, []);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Typography variant=\"h4\" gutterBottom>\n        Reported Pets\n      </Typography>\n      <Grid container spacing={2}>\n        {pets.map((pet, index) => (\n          <Grid item xs={12} sm={6} md={4} key={index}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                  {pet.status}\n                </Typography>\n                <Typography color=\"textSecondary\">\n                  Location: {pet.location}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Pets;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,IAAI,EAAEC,SAAS,QAAQ,eAAe;AAC9E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd;IACAM,KAAK,CAACO,GAAG,CAAC,WAAW,CAAC,CACnBC,IAAI,CAACC,QAAQ,IAAIH,OAAO,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CACxCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAACH,SAAS;IAACe,QAAQ,EAAC,IAAI;IAAAC,QAAA,gBACtBb,OAAA,CAACL,UAAU;MAACmB,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbnB,OAAA,CAACJ,IAAI;MAACwB,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAR,QAAA,EACxBV,IAAI,CAACmB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACnBxB,OAAA,CAACJ,IAAI;QAAC6B,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAf,QAAA,eAC9Bb,OAAA,CAACP,IAAI;UAAAoB,QAAA,eACHb,OAAA,CAACN,WAAW;YAAAmB,QAAA,gBACVb,OAAA,CAACL,UAAU;cAACmB,OAAO,EAAC,IAAI;cAACe,SAAS,EAAC,IAAI;cAAAhB,QAAA,EACpCU,GAAG,CAACO;YAAM;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,eACbnB,OAAA,CAACL,UAAU;cAACoC,KAAK,EAAC,eAAe;cAAAlB,QAAA,GAAC,YACtB,EAACU,GAAG,CAACS,QAAQ;YAAA;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACb,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC,GAV6BK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWrC,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB,CAAC;AAACjB,EAAA,CAjCID,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AAmCV,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}